library(readxl)
ds -> read_excel("data/pima.xlsx")
library(readxl)
df <- read_excel("data/pima.xlsx")
df
df
library(tidyverse)
# Рассчитаем для glucose
glucose_df <- df %>%
summarise(
n <- n(),
mean <- mean(glucose),
sd <- sd(glucose),
f_q <- quantile(glucose, probs=0.25),
t_q <- quantile(glucose, probs=0.75),
min <- min(glucose),
max <- max(glucose)
)
glucose_df
# чтение датасета
library(readxl)
pima <- read_excel(path = "HW_3/pima.xlsx")
library(tidyverse)
# Рассчитаем для glucose
glucose_df <- df %>%
summarise(
n = n(),
mean = mean(glucose),
sd = sd(glucose),
f_q = quantile(glucose, probs=0.25),
t_q <- quantile(glucose, probs=0.75),
min <- min(glucose),
max <- max(glucose)
)
glucose_df
View(glucose_df)
# Рассчитаем для pressure
pressure_df <- df %>%
summarise(
n = n(),
mean = mean(pressure),
sd = sd(pressure),
f_q = quantile(pressure, probs=0.25),
t_q = quantile(pressure, probs=0.75),
min = min(pressure),
max = max(pressure)
)
pressure_df
View(pressure)
View(pressure)
# Рассчитаем для mass
mass_df <- df %>%
summarise(
n = n(),
mean = mean(mass),
sd = sd(mass),
f_q = quantile(mass, probs=0.25),
t_q = quantile(mass, probs=0.75),
min = min(mass),
max = max(mass)
)
mass_df
# Рассчитаем для diabetes
diabetes_df <- df %>%
group_by(diabetes) %>%
summarise(abs = n(),
rel = n() / nrow(pima) * 100)
# Рассчитаем для diabetes
diabetes_df <- df %>%
group_by(diabetes) %>%
summarise(abs = n(),
rel = n() / nrow(df) * 100)
diabetes_df
df %>%
mutate(age_group = ifelse(age>=21 & age<=35, "21-35",
ifelse(age>= 36 & age<=49, "36-49", "50+")))
df
df %>%
mutate(age_group = ifelse(age>=21 & age<=35, "21-35",
ifelse(age>= 36 & age<=49, "36-49", "50+")))
df
df -> df %>%
mutate(age_group = ifelse(age>=21 & age<=35, "21-35",
ifelse(age>= 36 & age<=49, "36-49", "50+")))
df %>%
mutate(age_group = ifelse(age>=21 & age<=35, "21-35",
ifelse(age>= 36 & age<=49, "36-49", "50+")))
df
df <- df %>%
mutate(age_group = ifelse(age>=21 & age<=35, "21-35",
ifelse(age>= 36 & age<=49, "36-49", "50+")))
df
# Создаем новую переменную на основе age
df <- df %>%
mutate(age_group = as.factor(ifelse(age>=21 & age<=35, "21-35",
ifelse(age>= 36 & age<=49, "36-49", "50+"))))
df
# Рассчитаем описательную статистику по новой переменной
age_df <- df %>%
group_by(age_group) %>%
summarise(abs =n(), rel = n()/nrow(df) * 100)
age_df
df %>%
summarise(mean = mean(pedigree),
sd = sd(pedigree),
n = length(pedigree),
z = qnorm(0.95),
se = sd/qsrt(n),
ci_lower = mean - z*se,
ci_upper = mean + z*se)
df %>%
summarise(mean = mean(pedigree),
sd = sd(pedigree),
n = length(pedigree),
z = qnorm(0.95),
se = sd/sqrt(n),
ci_lower = mean - z*se,
ci_upper = mean + z*se)
df %>%
summarise(mean = mean(pedigree),
sd = sd(pedigree),
n = length(pedigree),
z = qnorm(0.90),
se = sd/sqrt(n),
ci_lower = mean - z*se,
ci_upper = mean + z*se)
pedigree_df <- df %>%
summarise(mean = mean(pedigree),
sd = sd(pedigree),
n = length(pedigree),
z = qnorm(0.90),
se = sd/sqrt(n),
ci_lower = mean - z*se,
ci_upper = mean + z*se)
pedigree_df
df %>%
density_plot = density(glucose, na.rm = TRUE) %>%
plot(density_plot, main="Плотность вероятности для Glucose", xlab="Уровень глюкозы")
df %>%
density_plot = density(glucose, na.rm = TRUE) %>%
plot(density_plot, main="Плотность вероятности для Glucose", xlab="Уровень глюкозы")
df %>%
density_plot = density(glucose, na.rm = TRUE) %>%
plot(density_plot, main="Плотность вероятности для Glucose", xlab="Уровень глюкозы")
df
# График плотности для переменной glucose
density_plot <- density(df$glucose, na.rm = TRUE)
plot(density_plot, main = "График плотности для уровня глюкозы", xlab = "Уровень глюкозы")
abline(v = mean(df$glucose, na.rm = TRUE), col = "red")
# График плотности для переменной glucose
density_plot <- density(df$glucose, na.rm = TRUE)
plot(density_plot, main = "График плотности для уровня глюкозы", xlab = "Уровень глюкозы", ylab="Плотность")
abline(v = mean(df$glucose, na.rm = TRUE), col = "red")
density_plot <- density(df$glucose, na.rm = TRUE)
plot(density_plot, main = "График плотности для Glucose", xlab = "Уровень глюкозы", ylab="Плотность")
abline(v = mean(df$glucose, na.rm = TRUE), col = "blue")
hist(df$glucose, main = "Гистограмма уровня глюкозы", xlab = "Уровень глюкозы", border = "blue", col = "lightblue", breaks = 30)
abline(v = mean(df$glucose, na.rm = TRUE), col = "red", lwd = 2)
hist(df$glucose, main = "Гистограмма уровня глюкозы", xlab = "Уровень глюкозы", border = "blue", col = "lightblue", breaks = 30)
abline(v = mean(df$glucose, na.rm = TRUE), col = "red", lwd = 5)
hist(df$glucose, main = "Гистограмма уровня глюкозы", xlab = "Уровень глюкозы", border = "blue", col = "lightblue", breaks = 30)
abline(v = mean(df$glucose, na.rm = TRUE), col = "red", lwd = 1)
hist(df$glucose, main = "Гистограмма уровня глюкозы", xlab = "Уровень глюкозы", border = "blue", col = "lightblue", breaks = 30)
abline(v = mean(df$glucose, na.rm = TRUE), col = "red", lwd = 3)
hist(df$glucose, main = "Гистограмма уровня глюкозы", xlab = "Уровень глюкозы", ylab="Частота", border = "blue", col = "lightblue", breaks = 30)
abline(v = mean(df$glucose, na.rm = TRUE), col = "red", lwd = 3)
# Построение боксплот для переменной diabetes
boxplot(glucose ~ diabetes, data = df, main = "Боксплот для уровня глюкозы", xlab = "Наличие диабета", ylab = "Уровень глюкозы", col = c("lightblue", "lightgreen"))
boxplot(glucose ~ diabetes, data = df, main = "Боксплот для уровня глюкозы", xlab = "Наличие диабета", ylab = "Уровень глюкозы", col = c("blue", "green"))
# чтение датасета
library(readxl)
pima <- read_excel(path = "data/pima.xlsx")
library(ggplot2)
# Диаграмму рассеяния с группировкой по переменной diabetes
ggplot(df, aes(x = triceps, y = mass, color = diabetes)) +
geom_point() +
facet_grid(. ~ diabetes) +
labs(x = "Обхват трицепса", y = "Масса тела", title = "Диаграмма рассеяния с группировкой по диабету") +
theme_minimal()
